/*
***********************************************************************************
@Author: Roman Karpovich
@Created on: 11-02-2018
@Last modified: 04-11-2020
@Function: Create nested folders
@Current version: v1.3
***********************************************************************************
*/

    $user = "%USERNAME%";
    $filefolder = "Z:\13 Стандарты организации\Файловая структура\folders.txt";
    if (exists($filefolder) == 1)
    {
    if (confirm("$user, будет cоздано дерево проекта в папке <curpath>.<crlf><crlf>После подтверждения подожди завершения программы!") == 1)
    {
    $lb = "<crlf>";

    $items = readfile($filefolder);

    $numIndent = 0;

    $paths = "";
    $files = "";
    $lastIndent = 0;
    $countdir = 0;
    $countfile =0;
    $numPattern = "^\s*\d+\s";
    $patternfolder ="Z:\3 Шаблоны\5 Государственные органы\Госстройэкспертиза";

    foreach($item, $items, $lb) {
        if (!$item) { continue; }

        if ($numIndent) { $curIndent = trim(regexmatches($item, $numPattern), "<tab> ") - 1; }
        else            { $curIndent = strlen(regexmatches($item, "^\s+")); }

        if (!$curIndent) {
            if ($numIndent) { $trimmeditem = regexreplace($item, $numPattern); }
            else            { $trimmeditem = $item; }
            $path = $trimmeditem;
        } else {
            if ($numIndent) { $trimmeditem = regexreplace($item, $numPattern); }
            else            { $trimmeditem = trim($item, "<tab> ", "L"); }
        }


        if ($curIndent > $lastIndent) { $path = $path . "\" . $trimmeditem; }

        elseif ($curIndent < $lastIndent) { $path = gettoken($path, (($lastIndent - $curIndent) * -1) - 2, "\", , 1) . "\" . $trimmeditem; }

        elseif ($curIndent == $lastIndent && $curIndent != 0) { $path = gettoken($path, -2, "\", , 1) . "\" . $trimmeditem; }

        $lastIndent = $curIndent;
        $paths = $paths . $path . $lb;
    }
    $paths = formatlist($paths, "dents", $lb);

    // Создание дерева
    foreach($path, $paths, $lb)
    {
          if (regexmatches($path, ":$"))  { 
                     if(exists(replace("<curpath>\$path", ":")) !=1 && exists("$patternfolder\$filename") !=2) {
                              $filename=regexmatches($path, '([^.\\]+)\.(.+)+?(?=\:)');
                              $filepath=replace(replace("$path", "$filename"), ":");
                              copyas "Бланк_*.?", "<curpath>\$filepath", "$patternfolder\$filename";
                             
                              if(exists("<curpath>\$filepath$filename") != 0) 
                              {
                                  renameitem("Бланк_*", "<curpath>\$filepath$filename", 1);
                              }
                              $countfile = $countfile + 1; } }
          else{
                    if(exists("<curpath>\$path") != 2) {
                            new($path, "dir");
                            $countdir = $countdir + 1;}
                     }
    }
    //backupto "<curpath>\", "$patternfolder\.gitignore", 3, , , , , , 0;
    msg("Структура проекта создана из $countdir папок и $countfile файлов")
    }
    }
    else {msg("Отсутствует файл $filefolder с описанием директорий")}
